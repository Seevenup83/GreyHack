import_code("/bin/src/function.src")
clear_screen

//command: nmap
info("running nmap ...")
if params.len != 1 then error("<b>Usage: 7scan [ip address]</b>")	
ipAddress = params[0]
if not is_valid_ip(ipAddress) then error("nmap: invalid ip address")
if not get_shell.host_computer.is_network_active then error("nmap: No internet access.")

isLanIp = is_lan_ip( ipAddress )
if isLanIp then
   router = get_router;
else 
   router = get_router( ipAddress )
end if

if router == null then errort("nmap: ip address not found")
ports = null

if not isLanIp then
   ports = router.used_ports
else
   ports = router.device_ports(ipAddress)
end if

if ports == null then error("nmap: ip address not found")
if typeof(ports) == "string" then error(ports)
if(ports.len == 0) then error("Scan finished. No open ports.")

nmapInfo = "PORT STATE SERVICE VERSION LAN"   
for port in ports
   service_info = router.port_info(port)
   lan_ips = port.get_lan_ip
   port_status = "open"

   if(port.is_closed and not isLanIp) then
      port_status = "closed"
   end if
   nmapInfo = nmapInfo + "\n" + port.port_number + " " + port_status + " " + service_info + " " + lan_ips
end for
print(format_columns(nmapInfo) + "\n")

//command: scanrouter
info("running scanrouter ...")
router = get_router( ipAddress )
if router == null then error("scanrouter: ip address not found")
version = router.kernel_version
if not version then
	print("Warning: kernel_router.so not found")
else 
	print("kernel_router.so : v" + version)
end if

firewall_rules = router.firewall_rules
if typeof(firewall_rules) == "string" then error(firewall_rules)
if firewall_rules.len == 0 then 
  print("No firewall rules found!\n")
else
  scanInfo = "ACTION PORT SOURCE_IP DESTINATION_IP"
  for rules in firewall_rules
	scanInfo = scanInfo + "\n" + rules
  end for
  print(format_columns(scanInfo) + "\n")
end if

//command: whois
info("running whois ...")
print(whois(ipAddress))
